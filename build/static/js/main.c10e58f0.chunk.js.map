{"version":3,"sources":["SiteContent.js","NetworkState.js","App.js","index.js"],"names":["SiteContent","Container","className","Row","Col","Jumbotron","React","Component","PhoneAccordion","Accordion","key","eventKey","phone","PhoneInfo","Card","CustomToggle","as","Header","this","props","Collapse","Body","children","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","iconName","type","onClick","title","aria-hidden","NetworkState","outputRef","createRef","networkRefs","defaultNetworks","i","net","NaN","push","state","networks","response","invalid","modalShow","handleChange","bind","handleSubmit","isInvalid","closeModal","formInvalid","one","current","thisInvalid","two","setState","networkInvalid","networkValid","signalInvalid","signalValid","newNetworks","foundIndex","findIndex","x","number","event","preventDefault","stopPropagation","currentTarget","checkValidity","request","console","log","JSON","stringify","postData","then","data","scrollIntoView","behavior","catch","error","networkInputs","map","index","strRef","toString","ref","network","networkOutputs","other","thisNetwork","thatNetwork","Form","noValidate","onSubmit","Button","variant","size","block","CardDeck","ErrorModal","show","onHide","a","url","body","fetch","method","headers","json","Modal","aria-labelledby","centered","closeButton","Title","id","NetworkInput","handleInputChange","handleSignalChange","handleNetworkChange","name","value","target","Number","isNaN","md","Group","controlId","InputGroup","Prepend","Text","Control","onChange","isValid","custom","required","Feedback","placeholder","Append","NetworkOutput","thisStrength","strength","thatStrength","strongerBy","moreOrLess","toFixed","App","href","ReactDOM","render","document","getElementById"],"mappings":"4SAIMA,G,6KAEJ,OACC,kBAACC,EAAA,EAAD,CAAWC,UAAU,6BACpB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWH,UAAU,SACpB,wBAAIA,UAAU,aAAd,oCACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAb,uHAKH,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,uBAAGF,UAAU,iCAAb,gBACA,8OACA,wTACA,qOAIF,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,a,GAzBoBE,IAAMC,YAiC1BC,E,uKAEJ,OACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CAAWC,IAAK,EAAGC,SAAU,EAAGC,MAAO,UACtC,4BACC,6EACA,kDACC,4BACC,oIACA,0GAGF,kFACA,iHAIF,kBAAC,EAAD,CAAWF,IAAK,EAAGC,SAAU,EAAGC,MAAO,WACtC,4BACC,yEACA,sFACA,uK,GAtBuBN,IAAMC,WA8B7BM,E,uKAEJ,OACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAD,CAAcC,GAAIF,IAAKG,OAAQN,SAAUO,KAAKC,MAAMR,UACjDO,KAAKC,MAAMP,OAEd,kBAACH,EAAA,EAAUW,SAAX,CAAoBT,SAAUO,KAAKC,MAAMR,UACxC,kBAACG,EAAA,EAAKO,KAAN,KACEH,KAAKC,MAAMG,gB,GATMhB,IAAMC,WAiB9B,SAASQ,EAAT,GAAyD,IAAjCO,EAAgC,EAAhCA,SAAUX,EAAsB,EAAtBA,SAAUY,EAAY,EAAZA,SACrCC,EAAkBC,qBAAWC,KAE7BC,EAAmBC,YACxBjB,GACA,kBAAMY,GAAYA,EAASZ,MAGtBkB,EAAWL,IAAoBb,EAAW,WAAa,UAE7D,OACC,yBAAKT,UAAU,cAAc4B,KAAK,SAASC,QAASJ,GAClDL,EADF,iBACyB,0BAAMpB,UAAW,uBAAyB2B,EAAUG,MAAM,aAAaC,cAAY,UAK/FjC,Q,yECjGTkC,E,kDACL,WAAYf,GAAQ,IAAD,uBAClB,cAAMA,IAEDgB,UAAY7B,IAAM8B,YACvB,EAAKC,YAAc,CAAE,IAAQ/B,IAAM8B,YAC7B,IAAQ9B,IAAM8B,aAGpB,IADA,IAAIE,EAAkB,GACbC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAIC,EAAM,CAAC,OAAWD,EAAE,EACrB,QAAY,GACZ,OAAWE,IACX,SAAaA,KAChBH,EAAgBI,KAAKF,GAbJ,OAgBlB,EAAKG,MAAQ,CAACC,SAAWN,EACpBO,SAAW,GACXC,SAAU,EACVC,WAAY,GAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAxBA,E,+DA2BA9B,GAClB,IAAIkC,GAAc,EAElB,GAAqC,OAAjCnC,KAAKmB,YAAYiB,IAAIC,QAAkB,CAC1C,IAAIC,EAActC,KAAKiC,UAAUjC,KAAKmB,YAAYiB,IAAIC,QAAQZ,OAC1Da,IAAgBH,IACnBA,EAAcG,GAIhB,GAAqC,OAAjCtC,KAAKmB,YAAYoB,IAAIF,QAAkB,CAC1C,IAAIC,EAActC,KAAKiC,UAAUjC,KAAKmB,YAAYoB,IAAIF,QAAQZ,OAC1Da,IAAgBH,IACnBA,EAAcG,GAIZtC,KAAKyB,MAAMG,UAAYO,GAC1BnC,KAAKwC,SAAS,CACbZ,QAAUO,M,gCAKHb,GACT,OAAQA,EAAImB,iBAAmBnB,EAAIoB,cAAkBpB,EAAIqB,gBAAkBrB,EAAIsB,c,mCAGnEtB,GACZ,IAAIuB,EAAc7C,KAAKyB,MAAMC,SAEzBoB,EAAaD,EAAYE,WAAU,SAAAC,GAAC,OAAIA,EAAEC,SAAW3B,EAAI2B,UAC7DJ,EAAYC,GAAcxB,EAE1BtB,KAAKwC,SAAS,CACbd,SAAWmB,M,mCAIAK,GAAQ,IAAD,OAMnB,GALAA,EAAMC,iBACND,EAAME,kBAEQF,EAAMG,cAERC,kBAAoBtD,KAAKyB,MAAMG,QAAS,CACnD,IAAI2B,EAAU,CAAC,SAAYvD,KAAKyB,MAAMC,UACtC8B,QAAQC,IAAI,YAAcC,KAAKC,UAAUJ,I,0CAEzCK,CAAS,qDAAsDL,GAC7DM,MAAK,SAAAC,GACLN,QAAQC,IAAI,aAAeC,KAAKC,UAAUG,IAE1C,EAAKtB,SAAS,CACbb,SAAWmC,IAGZ,EAAK7C,UAAUoB,QAAQ0B,eAAe,CAAEC,SAAU,cAElDC,OAAM,SAACC,GACPV,QAAQU,MAAM,SAAUA,WAG1BlE,KAAKwC,SAAS,CACbX,WAAY,M,mCAMd7B,KAAKwC,SAAS,CACbX,WAAY,M,+BAIJ,IAAD,OACJsC,EAAgBnE,KAAKyB,MAAMC,SAAS0C,KAAI,SAAC9C,EAAK+C,GACjD,IAAIC,EAASD,EAAQ,MAAQ,MAC7B,OACC,kBAAC,EAAD,CAAc7E,IAAK8B,EAAI2B,OAAOsB,WAAYC,IAAK,EAAKrD,YAAYmD,GAASG,QAASnD,EAAKQ,aAAc,EAAKA,kBAIxG4C,EAAiB1E,KAAKyB,MAAME,SAASyC,KAAI,SAAC9C,EAAK+C,GAClD,IAAIM,EAAQN,EAAQ,EAAI,EACxB,OACC,kBAAC,EAAD,CAAe7E,IAAK,EAAKiC,MAAME,SAAS0C,GAAOpB,OAAOsB,WACnDK,YAAa,EAAKnD,MAAME,SAAS0C,GACjCQ,YAAa,EAAKpD,MAAME,SAASgD,QAItC,OACC,6BACC,kBAAC5F,EAAA,EAAD,CAAWC,UAAU,oBACpB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,uBAAGF,UAAU,oCAAb,qBAIF,kBAAC8F,EAAA,EAAD,CAAMC,YAAU,EAACC,SAAUhF,KAAKgC,cAC9BmC,EAED,kBAACc,EAAA,EAAD,CAAQrE,KAAK,SAASsE,QAAQ,OAAOC,KAAK,KAAKC,OAAK,GAApD,uBAMF,kBAACrG,EAAA,EAAD,CAAWC,UAAU,oBACpB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACmG,EAAA,EAAD,KACEX,GAEF,yBAAKF,IAAKxE,KAAKiB,eAKlB,kBAACqE,EAAD,CAAYC,KAAMvF,KAAKyB,MAAMI,UAAW2D,OAAQxF,KAAKkC,kB,GArJ9B9C,IAAMC,W,4CA2JjC,8CAAAoG,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAI5B,EAAlC,+BAAyC,GACpC6B,EAAOjC,KAAKC,UAAUG,GAD3B,SAGwB8B,MAAMF,EAAK,CACjCG,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBH,KAAMA,IARR,cAGOhE,EAHP,yBAWQA,EAASoE,QAXjB,4C,sBAcA,SAAST,EAAWrF,GACnB,OACC,kBAAC+F,EAAA,EAAD,iBAAW/F,EAAX,CACEkF,KAAK,KACLc,kBAAgB,gCAChBC,UAAQ,IAET,kBAACF,EAAA,EAAMjG,OAAP,CAAcoG,aAAW,GACxB,kBAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,iCAAhB,2E,IAQEC,E,kDACL,WAAYrG,GAAQ,IAAD,8BAClB,cAAMA,IAEDwB,MAAQ,CAAEmB,aAAc,EACzBD,eAAgB,EAChBD,cAAe,EACfD,gBAAiB,GAErB,EAAK8D,kBAAoB,EAAKA,kBAAkBxE,KAAvB,gBACzB,EAAKyE,mBAAqB,EAAKA,mBAAmBzE,KAAxB,gBAC1B,EAAK0E,oBAAsB,EAAKA,oBAAoB1E,KAAzB,gBAVT,E,8DAaD2E,EAAMC,GACvB,IAAIrF,EAAMtB,KAAKC,MAAMwE,QACrBnD,EAAIoF,GAAQC,EAEZ3G,KAAKC,MAAM6B,aAAaR,K,yCAGN4B,GAClB,IAAMwD,EAAOxD,EAAM0D,OAAOF,KACpBC,EAAQzD,EAAM0D,OAAOD,MAEvBE,OAAOC,MAAMH,GAChB3G,KAAKwC,SAAS,CACbI,aAAc,EACdD,eAAgB,IAEPgE,IAAU,KAAOA,IAAU,GACrC3G,KAAKwC,SAAS,CACbI,aAAc,EACdD,eAAgB,IAGjB3C,KAAKwC,SAAS,CACbI,aAAc,EACdD,eAAgB,IAIlB3C,KAAKuG,kBAAkBG,EAAMC,K,0CAGVzD,GACnB,IAAMyD,EAAQzD,EAAM0D,OAAOD,MACrBD,EAAOxD,EAAM0D,OAAOF,KAEtBC,EACH3G,KAAKwC,SAAS,CACbE,cAAe,EACfD,gBAAiB,IAGlBzC,KAAKwC,SAAS,CACbE,cAAe,EACfD,gBAAiB,IAInBzC,KAAKuG,kBAAkBG,EAAMC,K,+BAI7B,OACC,kBAAC7B,EAAA,EAAK7F,IAAN,KACC,kBAACC,EAAA,EAAD,CAAK6H,GAAG,KACP,uBAAG/H,UAAU,kBAAb,WAAuCgB,KAAKC,MAAMwE,QAAQxB,OAA1D,MAGD,kBAAC6B,EAAA,EAAKkC,MAAN,CAAYlH,GAAIZ,IAAK6H,GAAG,IAAIE,UAAW,UAAYjH,KAAKC,MAAMwE,QAAQxB,OAAOsB,YAC5E,kBAAC2C,EAAA,EAAD,CAAYlI,UAAU,QACrB,kBAACkI,EAAA,EAAWC,QAAZ,KACC,kBAACD,EAAA,EAAWE,KAAZ,wBAED,kBAACtC,EAAA,EAAKuC,QAAN,CAAcvH,GAAG,SAAS4G,KAAK,UAC7BY,SAAUtH,KAAKyG,oBACfc,QAASvH,KAAKyB,MAAMiB,aACpBT,UAAWjC,KAAKyB,MAAMgB,eACtB+E,QAAM,EAACC,UAAQ,GAChB,4BAAQd,MAAM,IAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,YAAd,aAED,kBAAC7B,EAAA,EAAKuC,QAAQK,SAAd,CAAuB9G,KAAK,WAA5B,gEAMF,kBAACkE,EAAA,EAAKkC,MAAN,CAAYlH,GAAIZ,IAAK6H,GAAG,IAAIE,UAAW,SAAWjH,KAAKC,MAAMwE,QAAQxB,OAAOsB,YAC3E,kBAAC2C,EAAA,EAAD,CAAYlI,UAAU,QACrB,kBAAC8F,EAAA,EAAKuC,QAAN,CAAcX,KAAK,SAClBiB,YAAY,kBACZ/G,KAAK,SACL2G,QAASvH,KAAKyB,MAAMmB,YACpBX,UAAWjC,KAAKyB,MAAMkB,cACtB2E,SAAUtH,KAAKwG,mBACfiB,UAAQ,IACT,kBAACP,EAAA,EAAWU,OAAZ,KACC,kBAACV,EAAA,EAAWE,KAAZ,aAED,kBAACtC,EAAA,EAAKuC,QAAQK,SAAd,CAAuB9G,KAAK,WAA5B,mD,GAxGqBxB,IAAMC,WAkH3BwI,E,uKAEJ,IAAIC,EAAe9H,KAAKC,MAAM2E,YAAYmD,SACtCC,EAAehI,KAAKC,MAAM4E,YAAYkD,SAE1C,IAAKD,IAAiBE,EACrB,OAAO,KAGR,IAAIC,EAAa,EACbC,EAAa,GAYjB,OAVIJ,EAAeE,GAClBC,EAAaH,EAAeE,EAC5BE,EAAa,SAEbD,EAAaD,EAAeF,EAC5BI,EAAa,QAGdD,EAAaA,EAAWE,QAAQ,GAG/B,kBAACvI,EAAA,EAAD,KACC,kBAACA,EAAA,EAAKG,OAAN,gBAAsBC,KAAKC,MAAM2E,YAAY3B,OAA7C,KAAuDjD,KAAKC,MAAM2E,YAAYH,SAC7E,kBAAC7E,EAAA,EAAKO,KAAN,KACC,kBAACP,EAAA,EAAKwG,MAAN,kBAAuBpG,KAAKC,MAAM2E,YAAYmD,UAC9C,kBAACnI,EAAA,EAAKwH,KAAN,KACEpH,KAAKC,MAAM2E,YAAYH,QADzB,OACsCwD,EADtC,UACyDC,EADzD,kBACoFlI,KAAKC,MAAM4E,YAAYJ,e,GA5BrFrF,IAAMC,WAoCnB2B,IC1TAoH,MAnBf,WACC,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAACrJ,EAAA,EAAD,CAAWC,UAAU,oBACpB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,gCACC,uBAAGF,UAAU,qBAAb,uBAAkD,uBAAGqJ,KAAK,4BAAR,kBAAlD,sBAA0H,uBAAGA,KAAK,0GAAR,OAA1H,IAAmP,uBAAGA,KAAK,+FAAR,cCZ1PC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c10e58f0.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Container, Row, Col, Card, Jumbotron, Accordion, AccordionContext, useAccordionToggle } from 'react-bootstrap';\r\nimport './signal.css';\r\n\r\nclass SiteContent extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container className=\"networkContainer noBottom\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Jumbotron className=\"jumbo\">\r\n\t\t\t\t\t\t\t<h1 className=\"display-4\">Comparing Mobile Signal Strength</h1>\r\n\t\t\t\t\t\t\t<hr className=\"my-4\"/>\r\n\t\t\t\t\t\t\t<p className=\"lead\">Trying to decide between two mobile providers? Want to see which has a better signal? You're in the right place!</p>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<p className=\"h3 text-center someTopPadding\">How It Works</p>\r\n\t\t\t\t\t\t<p>The bars at the top of your smartphone screen are unreliable. This is because each mobile provider and even each smartphone have different thresholds for determining what constitutes 5 bars v.s. 4 bars, etc.</p>\r\n\t\t\t\t\t\t<p>There is however an objective measurement of signal strength, which is measured in decibels (dBm). This is a negative number and the closer it is to zero, the stronger it is. The scale in strength is not linear though: going up or down by 10 means a tenfold difference in strength!</p>\r\n\t\t\t\t\t\t<p>Follow the instructions for your phone type to record the signal strength provided by your network. Then fill out the form to determine the relative strength compared to another network's reading!</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<PhoneAccordion/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PhoneAccordion extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Accordion>\r\n\t\t\t\t<PhoneInfo key={1} eventKey={1} phone={\"iPhone\"}>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Go into your Settings > WiFi > Turn Off WiFi.</li>\r\n\t\t\t\t\t\t<li>Check your iOS and:\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>For iOS 9.3 and later go to Settings > Cellular > Cellular Data Options > Enable LTE > Turn Off LTE.</li>\r\n\t\t\t\t\t\t\t\t<li>For iOS 9.2 and earlier Settings > Cellular > Enable LTE > Turn Off LTE.</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>Make a phone call to *3001#12345#* and press call.</li>\r\n\t\t\t\t\t\t<li>Select Serving Cell Measurements and refer to the top item named Measured RSSI.</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</PhoneInfo>\r\n\t\t\t\t\r\n\t\t\t\t<PhoneInfo key={2} eventKey={2} phone={\"Android\"}>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Settings > More Options or More Settings.</li>\r\n\t\t\t\t\t\t<li>Tap on About Phone > Mobile Networks > Signal Strength</li>\r\n\t\t\t\t\t\t<li>Under Signal Strength you will see your dB reading. If you do not see it there you will see it under Network Type or SIM Status.</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</PhoneInfo>\r\n\t\t\t</Accordion>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PhoneInfo extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Card>\r\n\t\t\t\t<CustomToggle as={Card.Header} eventKey={this.props.eventKey}>\r\n\t\t\t\t  {this.props.phone}\r\n\t\t\t\t</CustomToggle>\r\n\t\t\t\t<Accordion.Collapse eventKey={this.props.eventKey}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t{this.props.children}\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Accordion.Collapse>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction CustomToggle({ children, eventKey, callback }) {\r\n\tconst currentEventKey = useContext(AccordionContext);\r\n\r\n\tconst decoratedOnClick = useAccordionToggle(\r\n\t\teventKey,\r\n\t\t() => callback && callback(eventKey),\r\n\t);\r\n\r\n\tconst iconName = currentEventKey === eventKey ? \"oi-minus\" : \"oi-plus\";\r\n\r\n\treturn (\r\n\t\t<div className=\"card-header\" type=\"button\" onClick={decoratedOnClick}>\r\n\t\t\t{children} Instructions <span className={\"float-right icon oi \" + iconName} title=\"open/close\" aria-hidden=\"true\"></span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SiteContent;","import React from 'react';\r\nimport { Button, Container, Row, Col, InputGroup, Form, Card, CardDeck, Modal } from 'react-bootstrap';\r\nimport './signal.css';\r\n\r\nclass NetworkState extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.outputRef = React.createRef();\r\n\t\tthis.networkRefs = { \"one\" : React.createRef(),\r\n\t\t\t\t\t\t\t \"two\" : React.createRef()};\r\n\t\t\r\n\t\tlet defaultNetworks = [];\r\n\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\tlet net = {\"number\" : i+1, \r\n\t\t\t\t\t\t\"network\" : \"\", \r\n\t\t\t\t\t\t\"signal\" : NaN, \r\n\t\t\t\t\t\t\"strength\" : NaN};\r\n\t\t\tdefaultNetworks.push(net);\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = {networks : defaultNetworks,\r\n\t\t\t\t\t  response : [],\r\n\t\t\t\t\t  invalid : false,\r\n\t\t\t\t\t  modalShow : false};\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.isInvalid = this.isInvalid.bind(this);\r\n\t\tthis.closeModal = this.closeModal.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(props) {\r\n\t\tlet formInvalid = false;\r\n\t\t\r\n\t\tif (this.networkRefs.one.current !== null) {\r\n\t\t\tlet thisInvalid = this.isInvalid(this.networkRefs.one.current.state);\r\n\t\t\tif (thisInvalid && !formInvalid) {\r\n\t\t\t\tformInvalid = thisInvalid;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.networkRefs.two.current !== null) {\r\n\t\t\tlet thisInvalid = this.isInvalid(this.networkRefs.two.current.state);\r\n\t\t\tif (thisInvalid && !formInvalid) {\r\n\t\t\t\tformInvalid = thisInvalid;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.state.invalid !== formInvalid) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinvalid : formInvalid\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tisInvalid(net) {\r\n\t\treturn (net.networkInvalid && !net.networkValid) || (net.signalInvalid && !net.signalValid);\r\n\t}\r\n\r\n\thandleChange(net) {\r\n\t\tlet newNetworks = this.state.networks;\r\n\r\n\t\tlet foundIndex = newNetworks.findIndex(x => x.number === net.number);\r\n\t\tnewNetworks[foundIndex] = net;\r\n\r\n\t\tthis.setState({\r\n\t\t\tnetworks : newNetworks\r\n\t\t});\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t\t\r\n\t\tlet formTag = event.currentTarget;\r\n\t\t\r\n\t\tif (formTag.checkValidity() && !this.state.invalid) {\r\n\t\t\tlet request = {\"networks\": this.state.networks};\r\n\t\t\tconsole.log(\"request: \" + JSON.stringify(request));\r\n\t\t\t\r\n\t\t\tpostData('http://briannadardin.pythonanywhere.com/api/signal', request)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(\"response: \" + JSON.stringify(data));\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tresponse : data\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.outputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmodalShow : true\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcloseModal() {\r\n\t\tthis.setState({\r\n\t\t\tmodalShow : false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet networkInputs = this.state.networks.map((net, index) => {\r\n\t\t\tlet strRef = index ? \"two\" : \"one\";\r\n\t\t\treturn (\r\n\t\t\t\t<NetworkInput key={net.number.toString()} ref={this.networkRefs[strRef]} network={net} handleChange={this.handleChange}/>\r\n\t\t\t);\r\n\t\t});\r\n\t\t\r\n\t\tlet networkOutputs = this.state.response.map((net, index) => {\r\n\t\t\tlet other = index ? 0 : 1;\r\n\t\t\treturn (\r\n\t\t\t\t<NetworkOutput key={this.state.response[index].number.toString()} \r\n\t\t\t\t\t\t\tthisNetwork={this.state.response[index]}\r\n\t\t\t\t\t\t\tthatNetwork={this.state.response[other]}/>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Container className=\"networkContainer\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<p className=\"h3 text-center someBottomPadding\">Compare Signals</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Form noValidate onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t{networkInputs}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"info\" size=\"lg\" block>\r\n\t\t\t\t\t\t\tCOMPARE STRENGTHS\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t<Container className=\"networkContainer\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<CardDeck>\r\n\t\t\t\t\t\t\t\t{networkOutputs}\r\n\t\t\t\t\t\t\t</CardDeck>\r\n\t\t\t\t\t\t\t<div ref={this.outputRef} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t<ErrorModal show={this.state.modalShow} onHide={this.closeModal}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nasync function postData(url = '', data = {}) {\r\n\tlet body = JSON.stringify(data);\r\n\t\r\n\tconst response = await fetch(url, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: body\r\n\t});\r\n\t\r\n\treturn response.json();\r\n}\r\n\r\nfunction ErrorModal(props) {\r\n\treturn (\r\n\t\t<Modal {...props}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\t>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\tInvalid form data. Please fill out all fields properly and try again.\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nclass NetworkInput extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = { signalValid : false, \r\n\t\t\t\t\t\tsignalInvalid : false,\r\n\t\t\t\t\t\tnetworkValid : false,\r\n\t\t\t\t\t\tnetworkInvalid : false};\r\n\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.handleSignalChange = this.handleSignalChange.bind(this);\r\n\t\tthis.handleNetworkChange = this.handleNetworkChange.bind(this);\r\n\t}\r\n\r\n\thandleInputChange(name, value) {\r\n\t\tlet net = this.props.network;\r\n\t\tnet[name] = value;\r\n\r\n\t\tthis.props.handleChange(net);\r\n\t}\r\n\r\n\thandleSignalChange(event) {\r\n\t\tconst name = event.target.name;\r\n\t\tconst value = event.target.value;\r\n\t\t\r\n\t\tif (Number.isNaN(value)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsignalValid : false,\r\n\t\t\t\tsignalInvalid : true\r\n\t\t\t});\r\n\t\t} else if (value >= -140 && value <= -60) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsignalValid : true,\r\n\t\t\t\tsignalInvalid : false\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsignalValid : false,\r\n\t\t\t\tsignalInvalid : true\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tthis.handleInputChange(name, value);\r\n\t}\r\n\r\n\thandleNetworkChange(event) {\r\n\t\tconst value = event.target.value;\r\n\t\tconst name = event.target.name;\r\n\t\t\r\n\t\tif (value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnetworkValid : true,\r\n\t\t\t\tnetworkInvalid : false\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnetworkValid : false,\r\n\t\t\t\tnetworkInvalid : true\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tthis.handleInputChange(name, value);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Form.Row>\r\n\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t<p className=\"someTopPadding\">Network {this.props.network.number}:</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t\r\n\t\t\t\t<Form.Group as={Col} md=\"6\" controlId={\"network\" + this.props.network.number.toString()}>\r\n\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<InputGroup.Text>Mobile Network</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<Form.Control as=\"select\" name=\"network\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNetworkChange}\r\n\t\t\t\t\t\t\t\tisValid={this.state.networkValid}\r\n\t\t\t\t\t\t\t\tisInvalid={this.state.networkInvalid}\r\n\t\t\t\t\t\t\t\tcustom required>\r\n\t\t\t\t\t\t\t<option value=\"\">Choose...</option>\r\n\t\t\t\t\t\t\t<option value=\"Verizon\">Verizon</option>\r\n\t\t\t\t\t\t\t<option value=\"AT&T\">AT&T</option>\r\n\t\t\t\t\t\t\t<option value=\"T-Mobile\">T-Mobile</option>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t  You must choose one of the three mobile network providers.\r\n\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t\r\n\t\t\t\t<Form.Group as={Col} md=\"4\" controlId={\"signal\" + this.props.network.number.toString()}>\r\n\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t<Form.Control name=\"signal\"\r\n\t\t\t\t\t\t\tplaceholder=\"Signal strength\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tisValid={this.state.signalValid}\r\n\t\t\t\t\t\t\tisInvalid={this.state.signalInvalid}\r\n\t\t\t\t\t\t\tonChange={this.handleSignalChange} \r\n\t\t\t\t\t\t\trequired/>\r\n\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t<InputGroup.Text>dBm</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t  It must be a number between -140 and -60\r\n\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t  </InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form.Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass NetworkOutput extends React.Component {\r\n\trender() {\r\n\t\tlet thisStrength = this.props.thisNetwork.strength;\r\n\t\tlet thatStrength = this.props.thatNetwork.strength;\r\n\r\n\t\tif (!thisStrength || !thatStrength) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet strongerBy = 0;\r\n\t\tlet moreOrLess = '';\r\n\t\t\r\n\t\tif (thisStrength > thatStrength) {\r\n\t\t\tstrongerBy = thisStrength / thatStrength;\r\n\t\t\tmoreOrLess = 'more';\r\n\t\t} else {\r\n\t\t\tstrongerBy = thatStrength / thisStrength;\r\n\t\t\tmoreOrLess = 'less';\r\n\t\t}\r\n\t\t\r\n\t\tstrongerBy = strongerBy.toFixed(2);\r\n\r\n\t\treturn (\r\n\t\t\t<Card>\r\n\t\t\t\t<Card.Header>Network {this.props.thisNetwork.number}: {this.props.thisNetwork.network}</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>Strength: {this.props.thisNetwork.strength}</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t{this.props.thisNetwork.network} is {strongerBy} times {moreOrLess} powerful than {this.props.thatNetwork.network}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NetworkState;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SiteContent from './SiteContent'\nimport NetworkState from './NetworkState'\nimport './signal.css';\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<SiteContent/>\n\t\t\t<NetworkState/>\n\t\t\t\n\t\t\t<Container className=\"networkContainer\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t\t<p className=\"text-center small\">Site Copyright © <a href=\"http://briannadardin.com\">Brianna Dardin</a> 2020. References: <a href=\"https://www.signalbooster.com/blogs/news/how-to-measure-signal-strength-in-decibels-on-your-cell-phone\">[1]</a> <a href=\"https://www.boltontechnical.co.za/blogs/news/13-awesome-cell-phone-signal-booster-solutions\">[2]</a></p>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}